// Code generated by github.com/edgedb/edgedb-go/cmd/edgeql-go DO NOT EDIT.

package queries

import (
	"context"
	_ "embed"

	"github.com/edgedb/edgedb-go"
)

// testQueryResult
// is part of the return type for
// testQuery()
type testQueryResultCorrected struct {
	id     edgedb.UUID               `edgedb:"id"`
	test_2 testQueryResulttest_2ItemCorrected `edgedb:"test_2"`
}

// testQueryResulttest_2ItemCorrected
// is part of the return type for
// testQuery()
type testQueryResulttest_2ItemCorrected struct {
	// TODO: should this be embedded here??
	edgedb.Optional
	id edgedb.UUID `edgedb:"id"`
}

// testQuery
// runs the query found in
// test_query.edgeql
func testQueryCorrected(
	ctx context.Context,
	client *edgedb.Client,
) ([]testQueryResultCorrected, error) {
	var result []testQueryResultCorrected

	err := client.Query(
		ctx,
		testQueryCmd,
		&result,
	)

	return result, err
}

// testQueryJSON
// runs the query found in
// test_query.edgeql
// returning the results as json encoded bytes
func testQueryJSONCorrected(
	ctx context.Context,
	client *edgedb.Client,
) ([]byte, error) {
	var result []byte

	err := client.QueryJSON(
		ctx,
		testQueryCmd,
		&result,
	)
	if err != nil {
		return nil, err
	}

	return result, nil
}
